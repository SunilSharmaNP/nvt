from pyrogram import Client, filters
from pyrogram.types import Message
from bot.database import db
from bot.helpers.buttons import main_menu_buttons
from bot.utils.helpers import is_admin, is_authorized_group
from config import Config

WELCOME_TEXT = """
ЁЯСЛ **Video Tools Bot рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ!**

ЁЯОм **Professional Video Processing**

рдпрд╣ bot рдЖрдкрдХреЛ рд╢рдХреНрддрд┐рд╢рд╛рд▓реА video editing tools рдкреНрд░рджрд╛рди рдХрд░рддрд╛ рд╣реИ:
тАв Video Encoding (Multiple Quality Presets)
тАв Video Merging (Video+Video, Video+Audio, Video+Subs)
тАв Format Conversion (DocumentтЖФVideo)
тАв Watermarking
тАв Video Trimming
тАв Sample Generation
тАв MediaInfo Extraction

тЪЩя╕П **рд╢реБрд░реВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП:**
1. рдкрд╣рд▓реЗ **User Settings** configure рдХрд░реЗрдВ
2. **Video Tools** menu рд╕реЗ tool рдЪреБрдиреЗрдВ
3. рдЕрдкрдиреА video file рднреЗрдЬреЗрдВ

ЁЯУЛ **рдЬрд░реВрд░реА рдиреЛрдЯ:**
тАв рдПрдХ рд╕рдордп рдореЗрдВ рдПрдХ task
тАв Authorized groups рдореЗрдВ рд╣реА рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ
тАв Task рд╢реБрд░реВ рдХрд░рдиреЗ рд╕реЗ рдкрд╣рд▓реЗ settings set рдХрд░реЗрдВ

рдиреАрдЪреЗ рд╕реЗ option рдЪреБрдиреЗрдВ:
"""

@Client.on_message(filters.command("start") & filters.private)
async def start_private(client: Client, message: Message):
    """Handle /start command in private chat"""
    user_id = message.from_user.id
    username = message.from_user.username

    await db.add_user(user_id, username)

    if await db.is_user_banned(user_id):
        await message.reply_text("тЭМ рдЖрдк рдЗрд╕ bot рдХреЛ рдЙрдкрдпреЛрдЧ рдХрд░рдиреЗ рд╕реЗ banned рд╣реИрдВред")
        return

    await message.reply_text(
        WELCOME_TEXT,
        reply_markup=main_menu_buttons()
    )

@Client.on_message(filters.command("start") & filters.group)
async def start_group(client: Client, message: Message):
    """Handle /start command in group"""
    user_id = message.from_user.id
    username = message.from_user.username
    chat_id = message.chat.id

    await db.add_user(user_id, username)

    if await db.is_user_banned(user_id):
        await message.reply_text("тЭМ рдЖрдк рдЗрд╕ bot рдХреЛ рдЙрдкрдпреЛрдЧ рдХрд░рдиреЗ рд╕реЗ banned рд╣реИрдВред")
        return

    if not await is_authorized_group(chat_id):
        await message.reply_text(
            "тЪая╕П **Unauthorized Group**\n\n"
            "рдпрд╣ bot рдХреЗрд╡рд▓ authorized groups рдореЗрдВ рдХрд╛рдо рдХрд░рддрд╛ рд╣реИред\n"
            f"рдХреГрдкрдпрд╛ owner рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред\n\n"
            f"Owner: {Config.OWNER_ID}"
        )
        return

    is_active = await db.is_user_active(user_id, chat_id)
    await db.set_user_active(user_id, chat_id, not is_active)

    if not is_active:
        await message.reply_text(
            f"тЬЕ **Bot Activated for {message.from_user.mention}**\n\n"
            "ЁЯОм рдЕрдм рдЖрдк рд╕рднреА video tools рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ!\n\n"
            "тЪЩя╕П **Quick Setup:**\n"
            "1. рдкрд╣рд▓реЗ User Settings configure рдХрд░реЗрдВ\n"
            "2. Video Tools menu рд╕реЗ tool рдЪреБрдиреЗрдВ\n"
            "3. рдЕрдкрдиреА files рднреЗрдЬреЗрдВ\n\n"
            "рдиреАрдЪреЗ рдХреЗ buttons рд╕реЗ рд╢реБрд░реВ рдХрд░реЗрдВ:",
            reply_markup=main_menu_buttons()
        )
    else:
        await message.reply_text(
            f"тП╕ **Bot Deactivated for {message.from_user.mention}**\n\n"
            "Bot рдЕрдм hold mode рдореЗрдВ рд╣реИред\n"
            "рджреЛрдмрд╛рд░рд╛ activate рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП /start рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред"
        )

@Client.on_message(filters.command("stop"))
async def stop_command(client: Client, message: Message):
    """Handle /stop command"""
    user_id = message.from_user.id

    await db.cancel_task(user_id)
    await db.clear_temp_files(user_id)

    if message.chat.type != "private":
        await db.set_user_active(user_id, message.chat.id, False)
        await message.reply_text(
            "ЁЯЫС **Bot Stopped**\n\n"
            "тАв Active tasks cancelled\n"
            "тАв Temporary files cleared\n"
            "тАв Bot set to hold mode\n\n"
            "Use /start to activate again."
        )
    else:
        await message.reply_text(
            "ЁЯЫС **Tasks Cancelled**\n\n"
            "рд╕рднреА active tasks cancel рдХрд░ рджрд┐рдП рдЧрдП рд╣реИрдВред"
        )

@Client.on_message(filters.command("s") & filters.group)
async def show_tasks(client: Client, message: Message):
    """Show all running tasks in the group"""
    chat_id = message.chat.id

    if not await is_authorized_group(chat_id):
        return

    tasks = await db.get_all_active_tasks()

    if not tasks:
        await message.reply_text("ЁЯУК **No Active Tasks**\n\nрдХреЛрдИ рднреА video processing task рдирд╣реАрдВ рдЪрд▓ рд░рд╣рд╛ рд╣реИред")
        return

    text = "ЁЯУК **Active Tasks**\n\n"
    for i, task in enumerate(tasks, 1):
        try:
            user = await client.get_users(task["user_id"])
            task_type = task.get("task_type", "Unknown")
            progress = task.get("progress", 0)

            text += f"{i}. **{user.mention}**\n"
            text += f"   тАв Task: {task_type}\n"
            text += f"   тАв Progress: {progress}%\n\n"
        except:
            continue

    await message.reply_text(text)

@Client.on_message(filters.command("help"))
async def help_command(client: Client, message: Message):
    """Handle /help command"""
    help_text = """
ЁЯУЪ **Video Tools Bot - Help Guide**

**Available Commands:**
тАв `/start` - Bot activate/deactivate рдХрд░реЗрдВ
тАв `/stop` - Bot stop рдХрд░реЗрдВ рдФрд░ tasks cancel рдХрд░реЗрдВ
тАв `/s` - рд╕рднреА running tasks рджреЗрдЦреЗрдВ (groups only)
тАв `/help` - рдпрд╣ help message

**рдХреИрд╕реЗ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ:**

**1я╕ПтГг User Settings**
Processing рд╕реЗ рдкрд╣рд▓реЗ рдЕрдкрдиреА preferences configure рдХрд░реЗрдВ:
тАв **Send as**: Document рдпрд╛ Video
тАв **Thumbnail**: Custom thumbnail set рдХрд░реЗрдВ
тАв **Filename**: Output filename customize рдХрд░реЗрдВ
тАв **Metadata**: Enable/Disable рдХрд░реЗрдВ
тАв **Download Mode**: Telegram рдпрд╛ Direct URL
тАв **Upload Mode**: Telegram рдпрд╛ GoFile server

**2я╕ПтГг Video Tools**
7 рд╢рдХреНрддрд┐рд╢рд╛рд▓реА tools рдореЗрдВ рд╕реЗ рдЪреБрдиреЗрдВ:

ЁЯФЧ **Video Merge**
   тАв Video + Video: Multiple videos merge рдХрд░реЗрдВ
   тАв Video + Audio: Audio track replace/add рдХрд░реЗрдВ
   тАв Video + Subtitles: Subtitle file add рдХрд░реЗрдВ

ЁЯОЮя╕П **Video Encoding**
   тАв Multiple quality presets (1080p, 720p, 480p, 360p)
   тАв HEVC encoding for smaller files
   тАв Custom encoding settings

ЁЯФД **Convert**
   тАв Document to Video
   тАв Video to Document

┬йя╕П **Watermark**
   тАв Videos рдкрд░ image watermark add рдХрд░реЗрдВ

тЬВя╕П **Trim Video**
   тАв Video рд╕реЗ specific portions cut рдХрд░реЗрдВ

ЁЯОм **Sample Video**
   тАв Sample clips generate рдХрд░реЗрдВ

ЁЯУК **MediaInfo**
   тАв Detailed video information рдкрд╛рдПрдВ

**Important Notes:**
тАв рдПрдХ рд╕рдордп рдореЗрдВ рдПрдХ task per user
тАв Authorized groups рдореЗрдВ рд╣реА рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ
тАв Tasks рд╢реБрд░реВ рдХрд░рдиреЗ рд╕реЗ рдкрд╣рд▓реЗ User Settings set рдХрд░реЗрдВ

рдФрд░ рдорджрдж рдЪрд╛рд╣рд┐рдП? Owner рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ: {Config.OWNER_ID}
"""
    await message.reply_text(help_text)
    
